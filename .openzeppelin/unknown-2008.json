{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xaa76888fB35eDBdf302C5cD48E2A7207f78e566A",
    "txHash": "0x51385e8c5438bb03b9b73b4c728bcce0d10407ab8f340fe838517f4ea0805d61"
  },
  "proxies": [
    {
      "address": "0xC6d1eFd908ef6B69dA0749600F553923C465c812",
      "txHash": "0x7cd74785d3fb06d0bf344e703c2b0476233460d7e5e314552dfc823787a792b3",
      "kind": "transparent"
    },
    {
      "address": "0x6d8Da3C039D1D78622F27D4739e1E00B324aFAAa",
      "txHash": "0xc12cedf31265b5d0dd39897c5cbcf288a2d682399723f86a1a9071fb08dfb899",
      "kind": "transparent"
    }
  ],
  "impls": {
    "41cad31048012ea295d299af687e67445bcf6d63dda1bdc50868dc40aae1100e": {
      "address": "0x678BFfe5AD3565fe61b05faDF82Bf56791Df2d9E",
      "txHash": "0x129fb67f267f59d800a1f0981138c48b4ac748b3a2dcc8f6dc8670f72a46fe9f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10b643062c26bdae895c39ec8336259ad1c28b4b333dce9e10817bec9dc46786": {
      "address": "0xC9F90dD3cfd08ce92144C41F91b2A97fFB072Cca",
      "txHash": "0xf6da95ec1d276fa03b0629525d9a43834910f660203a04b4c27e27024e80fb2e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:19"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:20"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad6b0130b34eaf6900e4f21d84d94e371812cb630b3539e6f53170309ab92594": {
      "address": "0x2bFAF913487819a0460bD5a3EF8C9CcB3346A28c",
      "txHash": "0x31fb37d6699a7d6b19e70929adadb8c5f33208634652122a924fa96301d86767",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:19"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:20"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "791ce27b2a1fa9fa8af9576f78abf5b10e5d9de5ec188885e398ba30fbc49da3": {
      "address": "0xe4ef610610C5DD2758d475ec0D06Eb71AF6123f5",
      "txHash": "0x0e626b76ba6bf16d73d81eaf35c24145a82d639ef6ecb8f3ef6566744cb00271",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:23"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:20"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:21"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:14"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:17"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3a9f664d7c9bb72a1ac65c3878434fb2536019fd99640449946e7bf9634a4010": {
      "address": "0x4E323Ee52d777cB41c0E20D71149D17C584B0CDe",
      "txHash": "0xa411717deeb022c55ce6ddbfb972acd83ac73ec18789dc7be5ff7f17e783a740",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "428ad1d3da8dac460d94b61f7f7a81b7636cb6824abbaae4f8007219c582df45": {
      "address": "0x33B66d56C6738d2BC6b2fb26F7df8CEf8eA5eF76",
      "txHash": "0x8217782e038c0dd260c8e1601275c797ab3e230f4ee937b7f133e5a6446afb28",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:16"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:19"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:22"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:25"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "afbf95c3760b3e9cb22746e7d8a5783e47c060d54225cb8f5e24a8e971ce583b": {
      "address": "0x9ba104aaF21469F3477310ea4a66f55c8afeD1da",
      "txHash": "0xc304fa960245c7af50d4246c3f42a2b2ffe406551caffdca29b75458fec5efb9",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:16"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:19"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:22"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:25"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "70f7d3fd148977c436c6bcc19e489764e8c37e70dfb87f68856da4182af159b7": {
      "address": "0x9b49C252546FA64004F287a48392Da0CE26C816b",
      "txHash": "0xe777fd39ac97c04f6965931e89428d8baf3557894a7701541ee37c385c283944",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8cfd4cf804eada057b3e6b791b9f787d6c87f331d396b46455c04e66ffec7497": {
      "address": "0x9F8cba4BE44920548a965031934cb3310BD4b028",
      "txHash": "0x273c9e4fc6e5f857d63529791465a38d88abad92e44415a0319401887901e7f9",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4122_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4122_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4122_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4114": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4122_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4114",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5157f5954b053cabd71cf479477c2e824130be44657127ddd9e5d7cd5cbb69f3": {
      "address": "0xFC02DC5706369f6077b20d186C4fB23A70A09101",
      "txHash": "0xe2a13db5b917d62ba14c147d05761aa205e479f158166f841c34fd7d6eca2561",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4650_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4650_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4650_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4642": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4650_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4642",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db54e5bc8bac2a3f5a2b928714a2deaec112aae54b7aee28ade3cbcad56fab3d": {
      "address": "0x33a7495E1b6aD32C9E02a3e8DDaA312d6e21d70b",
      "txHash": "0x406bf118c41fdd4ec4f493852e1ac4b08ed641e2308e9365b82cc46755dee3f9",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:27"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4780_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4780_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4780_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4772": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4780_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4772",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "51bf5e7cb6eb6b20328351202b8f3e94299b03fa403dd1f3b64662aa50bcf8ac": {
      "address": "0x10CA9E4dbF8dadEb989213519d82cE73b31dcBA7",
      "txHash": "0xb4bdf176139438e84b0f1eec2ef905051dfef5f0c541391c4453172de6785378",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:27"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c06d7d16c604ec96856aa27cbf198e797584f85adfe4b530b35d6301d5d43032": {
      "address": "0xe1CDb7C172368E173281b3dCc0Ec70F270B993d1",
      "txHash": "0xdec4ca91fb8ac2184c211359fe2f2f9bfbffa28f6ffed26a235b7ecf9cb8dd71",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2e25e9817be5c3c9901e82a85c090462a26209a83684c2d5cbc48ad6dc15e55a": {
      "address": "0xD9B0884eD66C44Ba65433804ceCB0c8471351460",
      "txHash": "0x284e7b82012431fb2a24345117f575c9d2ddf2fef26a929463f3495f40254eed",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4785_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4785_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4785_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4777": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4785_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4777",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8cda43ce2d12da80f3ca84331d0c7936ce2a30a5e0754f90a6c5c6e4c7d167fc": {
      "address": "0x1dA830912A6aC2A0B1D10ecE72EB6d3388d02D4c",
      "txHash": "0xde1bfd46a045a62d68e97ca96a10d69cdeaa8c406a2f7cb165d4563aafaf9d3f",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3ca2bd48c134630fb9e5945728c43f0ae503212555ff65e03335b98b6d46da0": {
      "address": "0x029eF356C3c9C8A56aB9ec1a4ea04C74D2BD81e9",
      "txHash": "0x2abd241642b93291b02c1d9e6db04e01dc92466249288663917c087d5b65528e",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5238_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5238_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5238_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5230": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5238_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5230",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fcafa664a9cb42976e90345c5aa5f8219d53f20b4377ddea37224fc79c8a66ee": {
      "address": "0x5BB5DB0386B51889CFAd4AFf57B391dF61b718e8",
      "txHash": "0xfd946ebdd1e81408ad7f2ebc28648f9076a883b144d7fe2d5153d4cc3a47665c",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f27cbd4df115ceb5db2291b6ef5c7bcf3c3525b1226b4b020215a0637dd6ce5": {
      "address": "0x828177E8b56Ceff9df66115f86e92dbBCE768078",
      "txHash": "0xf9f2f2a727251f4cc68b99f29f39183c161632fe38472f44342c08101b03629f",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5300_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5300_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5300_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5292": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5300_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5292",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37881d6f94995a2c411ad285d26e4b8d597ad48fa58cf1fc85bd7aafe2161dcf": {
      "address": "0x62c48DFA47AEfA1c0CB40A8f7877fF8667DD6e23",
      "txHash": "0x03ac5c50ee5dabc58f70b9458e1297bbceb49942b2399df54e2fdd55cf847353",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5816_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5816_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5816_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5808": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5816_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5808",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f0713bde1a122c51b640c810933393217bdb58002e9b5c8383996ecbc6b3e39e": {
      "address": "0x4Ad55adCCc02562cF09EeD50331000B6c5E9daA9",
      "txHash": "0xf47b0673968b4c13e8cd2d60c587e44ed7e5c43f9ee586c91f73b8c807a1e2b7",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5b0dd67dc432e212b052f7e6c0f04459673a077685926d2fb91441129b318ebf": {
      "address": "0xcbffD81B8b8323c70ACdE06612286232Ae8716a2",
      "txHash": "0xce12f20c76da029a4dd9d7e10a88eb8466ed16fcadb5f99e947c05f1f5afd6ba",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5893_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5885": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5893_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5885",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ae7ea52d78b9e62424026c53aa064baeb457efec18bf87a1fe2f16997b83b632": {
      "address": "0x5f05004B32AcF5aAb0435c0A64cCA93A2c92bC39",
      "txHash": "0x28ab9b10fda6e87c6afb6c9fdf444d932c7bacb05bc95067b926bf0f6437c5c9",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5893_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5885": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5893_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5885",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e6460bfe1fb3daec7295f86edacc2eb2ccd70100e9540ddf0250eb4e3683f40c": {
      "address": "0x87f86965b967B0c097bF9a83E841329795Dc94BA",
      "txHash": "0xd075e8f9b9037d7b9ba590c98b87283bea4994c1e3e5f05f78fcd2afac2d58e2",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6078_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6070": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6078_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6070",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e6231b452817c538eb753210d41db772766570f6b60a15edd81001be7f4b5e54": {
      "address": "0x951fad9d302D54c7BD7b58d5063c84072A179854",
      "txHash": "0xe40ded885f9a640053d6b595668f2439d1ec40f36537533038ef5a610df6f985",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6078_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6070": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6078_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6070",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "770120a3f88dbe188829efd014796534fbbc9b77dc2e27a3ce450d227366a329": {
      "address": "0xfBeAe673e209DDa918dd6aB661fC42792d3B1bf4",
      "txHash": "0x7c00ded1401fa5c14437a2ee95b5affb8523dd6183731c90130a115fec932d0e",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6108_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6100": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6108_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6100",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "db9a02620ba45fcd394cb101038efcf81e5b61d24a4f88bcb242a3af112c5371": {
      "address": "0x5669cd8345F4E0b0C0A2cab60B0Ee661f03c165e",
      "txHash": "0x6db9ac18a5e05a4214126c1b89e298508f6c60136b0a99cd635d2adaeb672dc0",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6108_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6100": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6108_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6100",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8d06de80119df86daefdb671edcf8a9f8b934930a9d202d1c8c1fe4d3c7ca760": {
      "address": "0xA36eD9bA8D3B98d634244512E7E6D0291C9D5262",
      "txHash": "0xb043ae6f3fb5872c7c5dde74c921cf5189cf2aac18750fefc63928ef27e77fc5",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6144_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6136": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6144_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6136",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c0441fca7ec31c09905ea1967b017acd8104655445ab100d513cad6dd0442b67": {
      "address": "0xadfA85b6aF807722896004C9F77bC9052549820d",
      "txHash": "0x9871ea7589f608abd19190ec6be57a6a1ff6d9867f6ae25325a9c7d1a76a7a4f",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6144_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6136": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6144_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6136",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8fee321da9a3ce22cd2e10abde34fa5247737896869ba5821b212f3a61d40795": {
      "address": "0x3e75e32c7a751F21F88282fD7dd1D4Ee5E032F1b",
      "txHash": "0x912c4c57fd078370d3fbe00e14f4fbedd910e8b0ed27609a64014c6353df8f29",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6426_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6418": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6426_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6418",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ffc980eef00df92234262fb7e68242491fe7bc4abb8eb6a52d64c3e31f9af594": {
      "address": "0xea220f2Cbdd5034dC1c53523DcfB9B74D3048064",
      "txHash": "0xf41dcfa0e29f6e9ab7ded46f13ba6d954d7675ba410bbb11ad50ad81f29c8905",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6426_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6418": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6426_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6418",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a333aa31cb1afac9a4f195f528e42249293871b01c6f47dc24bf7a81a216d7c4": {
      "address": "0x459e1eb7429bfB8C0C41Db8f51bF6d5299112489",
      "txHash": "0x51a6846e626c2a47db493f11901b012140963f4296e9ba390273348c50d8ebc6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:185"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6521_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6512": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6521_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6512",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b5d8a8f55594e32f3645b34f97c756475b8677dac901538f98492006a45a48de": {
      "address": "0xd89010C3185cA2C7d0DA01D3e2438af9837Aa29a",
      "txHash": "0xb63da0ff87753c610f1d96db3462ac5ad8fcb0de6e50651a29f1951bf2ebc430",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:185"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6521_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6512": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6521_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6512",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9701de887140e871c90cbf97851d5629811be749265ea1d26c9edc25a590d185": {
      "address": "0xa2056D714446DC9c7bE30082521B14220f2b4c8b",
      "txHash": "0xcb7b04aed4c0fa58b93a570fcbff9099f2afa558e496dc3c10e764a7efc74d1b",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:138"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6398_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6389": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6398_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6389",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "43682382956b7ecb4c5f78d496fc467e766726c25326396a3799cf439f6cfb68": {
      "address": "0x191DD9EAf9DA811078c6Ec4e835c20D03F2Bc9dA",
      "txHash": "0xe75a2eb3ca7288165713e86a0074f49d340001ac94ae6b37d377be22ca4c37d9",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:138"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6398_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6389": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6398_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6389",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
