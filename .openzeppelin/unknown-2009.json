{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF9C6229793Cb100E408b8021D5152034758a5735",
    "txHash": "0xa223bc7f6eae3079db23c2271a8707787e02c0b2af6048bc221e25e9caeef350"
  },
  "proxies": [
    {
      "address": "0xA9a55a81a4C085EC0C31585Aed4cFB09D78dfD53",
      "txHash": "0xb663badffca8ca67ec3b53f611e9970d2f7bc62790c429b7904a07e2157b94c2",
      "kind": "transparent"
    },
    {
      "address": "0x7907A11948226348beDE63887e27c3F3a00AA6A9",
      "txHash": "0xacdb7bd63e393bc153a459b24b0dfa69f2bab7e41e7a9befa4c398556f42bfde",
      "kind": "transparent"
    }
  ],
  "impls": {
    "41cad31048012ea295d299af687e67445bcf6d63dda1bdc50868dc40aae1100e": {
      "address": "0xD89Ef80CB826D16252eD63416776A62cadddE86F",
      "txHash": "0xb99e37ba183f68550bb140a2638a5c06ecc5edf9c6e80848ef129bcab0caa657",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10b643062c26bdae895c39ec8336259ad1c28b4b333dce9e10817bec9dc46786": {
      "address": "0xD898E193A8A2138b4BE66e5Bd8772BB352C8FD23",
      "txHash": "0x76e630af87eba6db04d1fcae9a91268a62fd89f80ce7b61ad19306905e754807",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:19"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:20"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad6b0130b34eaf6900e4f21d84d94e371812cb630b3539e6f53170309ab92594": {
      "address": "0x98a4eC09C3cbC306cD61a9EdD199C2c317365925",
      "txHash": "0xd921c68aaf11d3c92edd7eea7ae8c96c206281e4c4cb4478250d834fcf48c361",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:15"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExUpgradeable",
            "src": "contracts\\base\\PausableExUpgradeable.sol:16"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:12"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:13"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "159",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:19"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:20"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SubstrateBRLCTokenV2Upgradeable",
            "src": "contracts\\tokens\\SubstrateBRLCTokenV2Upgradeable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "791ce27b2a1fa9fa8af9576f78abf5b10e5d9de5ec188885e398ba30fbc49da3": {
      "address": "0xC3BE34BC7f8074649Dc1df9526Ebc16e9B957C82",
      "txHash": "0x109f3bbf8528039c773ffed3978cad202862352fded49dd4e2aadf7f6c02d3d1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:23"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:20"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:21"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:14"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:17"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3a9f664d7c9bb72a1ac65c3878434fb2536019fd99640449946e7bf9634a4010": {
      "address": "0x1d92badf74792F6B970211803407527650A98E20",
      "txHash": "0x4844816c2f6a254908f58d34583835033f3563b4a9a1a5ede43ce37377c2024f",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "428ad1d3da8dac460d94b61f7f7a81b7636cb6824abbaae4f8007219c582df45": {
      "address": "0xB3ce0c8DFb9F283ce8BBd3D4443c7b4FCf8D2a19",
      "txHash": "0x1797ccf5e822117c36ef229906203db5e14f9e573693232a15da1a62afa20f1a",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:16"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:19"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:22"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:25"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BRLCTokenMintable",
            "src": "contracts\\BRLCTokenMintable.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "afbf95c3760b3e9cb22746e7d8a5783e47c060d54225cb8f5e24a8e971ce583b": {
      "address": "0xCf7F87e9B5919B6CC3b8A77cfC0Ce58d3dDF38AD",
      "txHash": "0xef75e1204c42a92872c0650707aee99406d2ab51fa74be1c2e7ea26400740a49",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\RescuableUpgradeable.sol:21"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\PausableExtUpgradeable.sol:18"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:17"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\BlacklistableUpgradeable.sol:20"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:16"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:19"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:22"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:25"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "USJimMintable",
            "src": "contracts\\USJimMintable.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "70f7d3fd148977c436c6bcc19e489764e8c37e70dfb87f68856da4182af159b7": {
      "address": "0x17d922fBD6c7a50621d63D299476932d2a8731Ef",
      "txHash": "0x275c35877256832a99c84040ac3f4bd299098c13b150c21d8554fa70fdaece96",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8cfd4cf804eada057b3e6b791b9f787d6c87f331d396b46455c04e66ffec7497": {
      "address": "0xbe22164f3a6b0c9A3B57ced2Ee0A8B11aCb37eE6",
      "txHash": "0x5d05a89090467951ebb2e4d16bedbed7d52f5199ab8e6fcaa0a2c552a4d8d2ba",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4122_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4122_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4122_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4114": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4122_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4114",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5157f5954b053cabd71cf479477c2e824130be44657127ddd9e5d7cd5cbb69f3": {
      "address": "0xad9930ba93388d45e417318f9e53d6FE2050e22a",
      "txHash": "0x8b6beb4ec552e40337d75907c772cde76fa4470eb5d109111e5a91995e0ff32c",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_blacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:16"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:19"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4650_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4650_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4650_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4642": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4650_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4642",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db54e5bc8bac2a3f5a2b928714a2deaec112aae54b7aee28ade3cbcad56fab3d": {
      "address": "0x58AC16B8B1839344F506DcA6E8C14d9f3231798d",
      "txHash": "0xabf56b4f459c514d483dfacfc790f37ef5228d3e01e62f199753b18031853bed",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:27"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:16"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)4780_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)4780_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Hook)4780_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ErrorHandlingPolicy)4772": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)4780_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)4772",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "51bf5e7cb6eb6b20328351202b8f3e94299b03fa403dd1f3b64662aa50bcf8ac": {
      "address": "0x75418F539eF5368AEDE40582160d2966F6dB994A",
      "txHash": "0x3dbdb4159590a0ec2f65343f817a5fa7fcfb3a49ff9454418923dd27e2cead91",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:24"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:27"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:142"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3ca2bd48c134630fb9e5945728c43f0ae503212555ff65e03335b98b6d46da0": {
      "address": "0xc385B97D650a2C624a2dE69bF5Fc139ffDa6c979",
      "txHash": "0x8be59eeff986679a78f70a6d57dbb9c17450c277997bc7c3acff1027fe1978fa",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:149"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5238_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5238_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5238_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5230": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5238_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5230",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8cda43ce2d12da80f3ca84331d0c7936ce2a30a5e0754f90a6c5c6e4c7d167fc": {
      "address": "0x05f0db36634B6C1Df6E5bC380222479f464d9ced",
      "txHash": "0xea425879d9b546e9bf726f71179987cee2f005b7b30ab33a6a6dbf8083c7045d",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:25"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts/base/common/BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fcafa664a9cb42976e90345c5aa5f8219d53f20b4377ddea37224fc79c8a66ee": {
      "address": "0x343fA1d470a115979885196A797a00fE6D748CAC",
      "txHash": "0x389d071bba4195cc499d2330d728aa676238f33d94ae6bd01fdcecbb5282a7d3",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f27cbd4df115ceb5db2291b6ef5c7bcf3c3525b1226b4b020215a0637dd6ce5": {
      "address": "0x6fc3F2A351323A9982B039e284B1Fd99402Bc05f",
      "txHash": "0x71570f7a4153c2d46ec6dd6ef0298d9bc95bcbfa2abe40a89986dda1864e4270",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlacklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:28"
          },
          {
            "label": "_blacklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlacklistableUpgradeable",
            "src": "contracts\\base\\common\\BlacklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_masterMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5300_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5300_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5300_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5292": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5300_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5292",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e0e96a7717e11e0d1d1430eb971341ea486d634e993fadb8047cc54d8bd1028f": {
      "address": "0x0FB05071b64E014EF866623eD327F3337bb7b381",
      "txHash": "0xed4ade088c9d0774ba38114702b3e431de8f998de6136f31103c3b3319463990",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5343_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5343_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5343_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5335": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5343_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5335",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "164bc222fdd0e851143d5da8b014998314888067782a7bb7d35a620ca15f268d": {
      "address": "0xaba1C899494829140dB891E7912BaA87D0564030",
      "txHash": "0x573d28d761dcd34795bebf879cba8d7ce2ec543c53b89728eb2febdf0ca46ac1",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:15"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:18"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:21"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5b0dd67dc432e212b052f7e6c0f04459673a077685926d2fb91441129b318ebf": {
      "address": "0x52f5B39a1e72eA5EC9f76b7a49F7AB254B26505E",
      "txHash": "0xb4bb562274f0457bcb5b36826fe97d17b36a627c08b42281f6ef1936f3877a12",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5893_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5885": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5893_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5885",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ae7ea52d78b9e62424026c53aa064baeb457efec18bf87a1fe2f16997b83b632": {
      "address": "0x8EDb60D557fd8c25f16C362a3bE5237d7d242685",
      "txHash": "0x7034d5df58e9da290c09ddcd5c55a8adc54cebf4669a2cfe9c6efa84d2f8c398",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)5893_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)5893_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)5885": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)5893_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)5885",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e6460bfe1fb3daec7295f86edacc2eb2ccd70100e9540ddf0250eb4e3683f40c": {
      "address": "0x8fC13f8236514470f777FCc7277ecc703d207802",
      "txHash": "0x16f10fdc73bdf2507e16b25f67df74e18c46301392aa3c2dee9a8711477c9fdc",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6078_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6070": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6078_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6070",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e6231b452817c538eb753210d41db772766570f6b60a15edd81001be7f4b5e54": {
      "address": "0x701244AB3Cf41b8D8ab1f77500a55a131dFED4aB",
      "txHash": "0x028de3e299cc326d44c9724f5af41c230cd01b0ebfeda2150834510d4ae4be32",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:156"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6078_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6078_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6070": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6078_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6070",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "770120a3f88dbe188829efd014796534fbbc9b77dc2e27a3ce450d227366a329": {
      "address": "0x4eEAc0c020D657a632Eb1b847d4992b876a4aFf3",
      "txHash": "0xa9af5b387186274af1fcd035edeb1b13e90f4f0e229dda25307b800da47b7886",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6108_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6100": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6108_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6100",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "db9a02620ba45fcd394cb101038efcf81e5b61d24a4f88bcb242a3af112c5371": {
      "address": "0x4d3150342f031a5ffE1be4BC444de8aFC5c4C57f",
      "txHash": "0xd88d0187c2ac326dd07b777adf72b8466cfee9f2473c18f4a743d2ad4e7d7111",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6108_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6108_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6100": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6108_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6100",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8d06de80119df86daefdb671edcf8a9f8b934930a9d202d1c8c1fe4d3c7ca760": {
      "address": "0xa543bdF4Dd239039BcDD8Bb7dD2CdA5d2a256a8E",
      "txHash": "0x235325cfd90ecf38ebcbb8ae684e9af9ff7c08c1939cba75f0426d8bc494c80c",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6144_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6136": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6144_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6136",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c0441fca7ec31c09905ea1967b017acd8104655445ab100d513cad6dd0442b67": {
      "address": "0x13a2172d4A1beF9D84E73cC9F3e8FB0b7B8d69C9",
      "txHash": "0x6f0a4f984d660cf7d3582fd601a1848cd2c3fc736639663bd992b7b1b30fd2dc",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:38"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:41"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:44"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6144_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6144_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6136": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6144_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6136",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8fee321da9a3ce22cd2e10abde34fa5247737896869ba5821b212f3a61d40795": {
      "address": "0xC17838087620FC438772021e05DcD67485b89E58",
      "txHash": "0x2e55bb59e3fa85dd8207a4ec35f6a0d368cf2bebf49d834a2bb761f4e67c35c6",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6426_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6418": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6426_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6418",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ffc980eef00df92234262fb7e68242491fe7bc4abb8eb6a52d64c3e31f9af594": {
      "address": "0xb918E10D786d1c4D5aAC4b1beA539076E7A68D1D",
      "txHash": "0x2a28a94a29d159ae7fc21ceb78f2ed7a221d852fbe97ff2e85f45a38c31053d4",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:159"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6426_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6426_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6418": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6426_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6418",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a333aa31cb1afac9a4f195f528e42249293871b01c6f47dc24bf7a81a216d7c4": {
      "address": "0x0c8842498178B09965f7A3ec26e1EA70ec5fAD29",
      "txHash": "0xedc4987850d098078a763f92482dc7557e8767fe52a7605faea8d07e9b376019",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:185"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6521_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6512": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6521_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6512",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b5d8a8f55594e32f3645b34f97c756475b8677dac901538f98492006a45a48de": {
      "address": "0xE7e1307c5371076cB964C44C33C2632a6949e773",
      "txHash": "0xb15af0ccd5a4f0abcd2c28ea1f7803bb9c70bde24115d0ce817293e01cd88d0f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:158"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:185"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6521_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6521_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6512": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6521_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6512",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9701de887140e871c90cbf97851d5629811be749265ea1d26c9edc25a590d185": {
      "address": "0xC596235C4e35B8D60f3302df1cF8Ef88cc8FA600",
      "txHash": "0x53a76e532ce28049f5d6d3e1a801090a15e63b36bfe6f9d46bfd5dab66e5dc11",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:138"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6398_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6389": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6398_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6389",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "43682382956b7ecb4c5f78d496fc467e766726c25326396a3799cf439f6cfb68": {
      "address": "0xBD7c5EBb45729674027CF8B96c1c0D72ce2c4070",
      "txHash": "0xd74023e37f51f3c9283491fc8b90c1e5194c5f74730f158553b824577b7160d6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:138"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6398_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6398_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6389": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6398_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6389",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2eacf3c019b3e831b0fbca735cbafb968650b857a34f5bec1c6d283c79e810f3": {
      "address": "0x0112B7a3Ec91d1225B0A06F3CDb897CbDA6d73F2",
      "txHash": "0x9b936a9031f16093e273032786844a5bb4e2b4773d652d27fd6da56397d8a9a2",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:219"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6537_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6537_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6537_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6528": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6537_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6528",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d8a288ac7cf5220b93aef80d55e69372169e5cc7d8a5190d9d5f387b70cb27ed": {
      "address": "0x374BBcc9bdC80f4eb0773176CaE455B4029d00EC",
      "txHash": "0xdd21961a46d11435d4a5343261c8d3a7dae0fef9da0f8972ed80c9e9e09fbf12",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:219"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6537_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6537_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6537_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6528": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6537_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6528",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "db2d0d645dc8abedeedc74901840ee1737c45a3083f639ba6f832c791b1e58fe": {
      "address": "0x0cbe6fcEB48558EA816c88797A611b7E6b56E69c",
      "txHash": "0x5c9574f3549f3bc7591649b28ee76bc225852907297012fd3202463c0c15dea3",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:279"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6685_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6685_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6685_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6676": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6685_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6676",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "925147d72a6a1e4514b6bab34fe8a76d726db1c93fad9679c7fcc681ebfbf34a": {
      "address": "0xC80eE6245ef978C56b4718657E4ffb7cf176c461",
      "txHash": "0x5940ca02d6390bd10e0a7f2323f5a5f2487234b7813ce240da75a6cc678b71d7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:279"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6685_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6685_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6685_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6676": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6685_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6676",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7a6d7d07e6a9671d5b910211a381dbd1b2c7acaaae5bf2e9b38ac946e634ee35": {
      "address": "0xD9cF9686A3a2888F125bD812328024e18D982397",
      "txHash": "0x8efbf8429b5a30bb8380dacdfab93f62103a1bf267d8c3c9b842782591cd16f4",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:279"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6673_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6673_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6673_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6664": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6673_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6664",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "64f7c3aca27c16f9496b36de1c8bc59c11d832ef25176b2d9c5ec6351e4a4164": {
      "address": "0x2CdF1D4C6c0A2Fd33c9C91E00031aE279E25a377",
      "txHash": "0x5d15697ada1fbcf865966c0291d13bfa0a04b3c43decb54a0cfb0d6499d3c8f1",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:279"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6673_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6673_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6673_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6664": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6673_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6664",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7c124200af08cee4e87283e501c86338f3829dc3a5611fa31990553cdc092ac5": {
      "address": "0xb1567B099D2118d83eB52399ea3F27c724B366B5",
      "txHash": "0x706fe345505720b53cab6cb2b2907b118942363be515cccb5c518fbff3018844",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:294"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6669_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6669_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6669_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6660": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6669_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6660",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "125acf1dda09c6c417a8177ef8b4c30ed1f59eb113fca61f5102da06388248db": {
      "address": "0x1dD90473B12C29D7e034E04DB126Ee8c26DDcAC8",
      "txHash": "0x9f4aaef9468d5ee3c3a9bf19121a56225ae4187bd4ac25c778e56507052f72f5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:15"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:18"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:294"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6669_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6669_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6669_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6660": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6669_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6660",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "357736c946396e48adae3bc51d5de750594e7f9d3c45ecf990ce2b3950873dce": {
      "address": "0x7a60955016985068dBa08322EF4619967665E7fd",
      "txHash": "0xe83be4df705175913dc7fc2f956e186bbcfff31b936f4ce0a11542ca2118b286",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:30"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:33"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:305"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6707_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6707_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6707_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6698": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6707_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6698",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7d8a392554154cd73e873a065a33a65a15dc7e00906ad7dc3aca5d87c187e013": {
      "address": "0x758B33DfA654f04F398cac3a55304607b4A8cB47",
      "txHash": "0x4b79515cc235fe33e013d0239c6800703c299722e5d45c73fd56051c43121dab",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts/base/common/RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts/base/common/PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts/base/common/BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts/base/ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:30"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:33"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts/base/ERC20Freezable.sol:305"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts/base/ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6707_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6707_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts/base/ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts/base/ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6707_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6698": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6707_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6698",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "39e26b31797d3872ef3006be7c548e7f0597a57579759d4b70453bde0a57f0cf": {
      "address": "0xdc95f7a36b63acDEAbb545113CFAFc4aC181120e",
      "txHash": "0x0e3cc52f23bf4f4501ee08a7ef32920a646f9b0a50714c33ab4adfe0bc7d24ec",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:30"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:33"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:305"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6732_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6732_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6732_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6723": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6732_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6723",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3ce9111eabd0ea12844e5c40b19744baae229439d38a656a56a309ab56ed422d": {
      "address": "0x7A81B1989D3fa5aFE53Fa98ebAb1275f006D1CB7",
      "txHash": "0x36c2a3afb24c2e09c5a277f8e0c261c81e0ad64026b6de0fe25f424fa0045429",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_rescuer",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RescuableUpgradeable",
            "src": "contracts\\base\\common\\RescuableUpgradeable.sol:20"
          },
          {
            "label": "_paused",
            "offset": 20,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_pauser",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "PausableExtUpgradeable",
            "src": "contracts\\base\\common\\PausableExtUpgradeable.sol:17"
          },
          {
            "label": "_mainBlocklister",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:28"
          },
          {
            "label": "_blocklisted",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BlocklistableUpgradeable",
            "src": "contracts\\base\\common\\BlocklistableUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
          },
          {
            "label": "_mainMinter",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:40"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:43"
          },
          {
            "label": "_mintersAllowance",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Mintable",
            "src": "contracts\\base\\ERC20Mintable.sol:46"
          },
          {
            "label": "_freezeApprovals",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:30"
          },
          {
            "label": "_frozenBalances",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:33"
          },
          {
            "label": "_freezers",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "210",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Freezable",
            "src": "contracts\\base\\ERC20Freezable.sol:305"
          },
          {
            "label": "_purposeAssignments",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:15"
          },
          {
            "label": "_totalRestrictedBalances",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:18"
          },
          {
            "label": "_restrictedPurposeBalances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20Restrictable",
            "src": "contracts\\base\\ERC20Restrictable.sol:174"
          },
          {
            "label": "_beforeTokenTransferHooks",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_struct(Hook)6732_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:16"
          },
          {
            "label": "_afterTokenTransferHooks",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_struct(Hook)6732_storage)dyn_storage",
            "contract": "ERC20Hookable",
            "src": "contracts\\base\\ERC20Hookable.sol:19"
          },
          {
            "label": "_trusted",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20Trustable",
            "src": "contracts\\base\\ERC20Trustable.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Hook)6732_storage)dyn_storage": {
            "label": "struct IERC20Hookable.Hook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ErrorHandlingPolicy)6723": {
            "label": "enum IERC20Hookable.ErrorHandlingPolicy",
            "members": [
              "Revert",
              "Event"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Hook)6732_storage": {
            "label": "struct IERC20Hookable.Hook",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "policy",
                "type": "t_enum(ErrorHandlingPolicy)6723",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
